#!/bin/bash

#SBATCH --job-name=mode_class
#SBATCH --mem=0
#SBATCH --qos=a40_arashaf_multimodal
#SBATCH --partition=a40
#SBATCH --gres=gpu:1
#SBATCH --cpus-per-task=8
#SBATCH --ntasks-per-node=1
#SBATCH --nodes=1
#SBATCH --time=72:00:00
#SBATCH --export=ALL
#SBATCH --output=outputs/slurm-%j-%N.out
#SBATCH --open-mode=append

# load virtual environment
source ~/Documents/envs/openpmcvl/bin/activate

cd ~/Documents/GitHub/pmc-data-extraction-dev
export PYTHONPATH="."

export NCCL_IB_DISABLE=1  # disable InfiniBand (the Vector cluster does not have it)
export NCCL_DEBUG=WARN
export NCCL_DEBUG_SUBSYS=WARN
export TORCH_NCCL_ASYNC_ERROR_HANDLING=1 # set to 1 for NCCL backend
export CUDA_LAUNCH_BLOCKING=1
export TORCH_DISTRIBUTED_DEBUG=DETAIL
export HYDRA_FULL_ERROR=1
export OMP_NUM_THREADS=12

export MASTER_ADDR=$(hostname)
export MASTER_PORT=45678

nvidia-smi
echo SLURM_ARRAY_JOB_ID=${SLURM_ARRAY_JOB_ID}
echo SLURM_JOBID=${SLURM_JOBID}

# “srun” executes the script <ntasks-per-node * nodes> times
# srun --export=ALL -N $SLURM_JOB_NUM_NODES --cpu_bind=v --accel-bind=gn \
#     python -u openpmcvl/probe/classifier.py \
#     'hydra.searchpath=[pkg://openpmcvl.experiment.configs]' \
#     +experiment=biomedclip_matched \
#     experiment_name=modality_classification \
#     datasets.test.pmcvl.include_entry=True \
#     dataloader.test.batch_size=128

srun --export=ALL -N $SLURM_JOB_NUM_NODES --cpu_bind=v --accel-bind=gn \
    python openpmcvl/probe/classifier.py \
    'hydra.searchpath=[pkg://openpmcvl.experiment.configs]' \
    +experiment=biomedclip_matched \
    experiment_name=lc25000_colon_mc \
    ~datasets.test.pmcvl \
    +datasets@datasets.test.lc25000=LC25000 \
    datasets.test.lc25000.root_dir=${LC25000_COLON_ROOT_DIR} \
    datasets.test.lc25000.organ=colon \
    +datasets/transforms@datasets.test.lc25000.transform=biomedclip_vision_transform \
    datasets.test.lc25000.split=test \
    datasets.test.lc25000.transform.job_type=eval \
    dataloader.test.batch_size=128 \
    trainer.logger.wandb.offline=True
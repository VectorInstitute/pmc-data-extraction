experiment_name: vitb16_bert256_train_bs8_test
job_type: eval
seed: 0
datasets:
  train:
    pmcvl:
      _target_: openpmcvl.experiment.datasets.pmcvl.PMCVL
      root_dir: /datasets/PMC-15M/processed/
      split: train_clean
      transform:
        _target_: openpmcvl.experiment.configs.biomedclip_vision_transform
        image_crop_size: 224
        job_type: train
      tokenizer: null
  val:
    pmcvl:
      _target_: openpmcvl.experiment.datasets.pmcvl.PMCVL
      root_dir: /datasets/PMC-15M/processed/
      split: val_clean
      transform:
        _target_: openpmcvl.experiment.configs.biomedclip_vision_transform
        image_crop_size: 224
        job_type: eval
      tokenizer: null
  test:
    pmcvl:
      _target_: openpmcvl.experiment.datasets.pmcvl.PMCVL
      root_dir: /datasets/PMC-15M/processed/
      split: test_dummy_
      transform:
        _target_: openpmcvl.experiment.configs.biomedclip_vision_transform
        image_crop_size: 224
        job_type: eval
      tokenizer: null
dataloader:
  train:
    _target_: torch.utils.data.dataloader.DataLoader
    _convert_: object
    dataset: ???
    batch_size: 256
    shuffle: null
    sampler: null
    batch_sampler: null
    num_workers: 4
    collate_fn:
      _target_: mmlearn.datasets.core.data_collator.DefaultDataCollator
      batch_processors:
        text:
          _target_: mmlearn.datasets.processors.tokenizers.HFTokenizer
          model_name_or_path: microsoft/BiomedNLP-BiomedBERT-base-uncased-abstract
          max_length: 256
          padding: max_length
          truncation: true
    pin_memory: true
    drop_last: false
    timeout: 0.0
    worker_init_fn: null
    multiprocessing_context: null
    generator: null
    prefetch_factor: null
    persistent_workers: false
    pin_memory_device: ''
  val:
    _target_: torch.utils.data.dataloader.DataLoader
    _convert_: object
    dataset: ???
    batch_size: 32
    shuffle: null
    sampler: null
    batch_sampler: null
    num_workers: 4
    collate_fn:
      _target_: mmlearn.datasets.core.data_collator.DefaultDataCollator
      batch_processors:
        text:
          _target_: mmlearn.datasets.processors.tokenizers.HFTokenizer
          model_name_or_path: microsoft/BiomedNLP-BiomedBERT-base-uncased-abstract
          max_length: 256
          padding: max_length
          truncation: true
    pin_memory: true
    drop_last: false
    timeout: 0.0
    worker_init_fn: null
    multiprocessing_context: null
    generator: null
    prefetch_factor: null
    persistent_workers: false
    pin_memory_device: ''
  test:
    _target_: torch.utils.data.dataloader.DataLoader
    _convert_: object
    dataset: ???
    batch_size: 8
    shuffle: null
    sampler: null
    batch_sampler: null
    num_workers: 2
    collate_fn:
      _target_: mmlearn.datasets.core.data_collator.DefaultDataCollator
      batch_processors:
        text:
          _target_: mmlearn.datasets.processors.tokenizers.HFTokenizer
          model_name_or_path: microsoft/BiomedNLP-BiomedBERT-base-uncased-abstract
          max_length: 256
          padding: max_length
          truncation: true
    pin_memory: true
    drop_last: false
    timeout: 0.0
    worker_init_fn: null
    multiprocessing_context: null
    generator: null
    prefetch_factor: null
    persistent_workers: false
    pin_memory_device: ''
task:
  _target_: mmlearn.tasks.contrastive_pretraining.ContrastivePretraining
  encoders:
    text:
      _target_: openpmcvl.experiment.modules.encoders.BiomedCLIPText
      model_name_or_path: microsoft/BiomedCLIP-PubMedBERT_256-vit_base_patch16_224
      pretrained: true
      use_all_token_embeddings: false
      freeze_layers: false
      freeze_layer_norm: true
      model_config_kwargs: null
    rgb:
      _target_: openpmcvl.experiment.modules.encoders.BiomedCLIPVision
      model_name_or_path: microsoft/BiomedCLIP-PubMedBERT_256-vit_base_patch16_224
      pretrained: true
      use_all_token_embeddings: false
      freeze_layers: false
      freeze_layer_norm: true
      model_config_kwargs: null
  heads: null
  postprocessors:
    norm_and_logit_scale:
      norm:
        _target_: mmlearn.modules.layers.normalization.L2Norm
        dim: -1
      logit_scale:
        _target_: mmlearn.modules.layers.logit_scaling.LearnableLogitScaling
        logit_scale_init: 14.285714285714285
        learnable: true
        max_logit_scale: 100.0
  modality_module_mapping:
    text:
      encoder_key: null
      head_key: null
      postprocessor_key: norm_and_logit_scale
    rgb:
      encoder_key: null
      head_key: null
      postprocessor_key: norm_and_logit_scale
  optimizer:
    _target_: torch.optim.adamw.AdamW
    _partial_: true
    lr: 0.0005
    betas:
    - 0.9
    - 0.98
    eps: 1.0e-06
    weight_decay: 0.2
    amsgrad: false
    maximize: false
    foreach: null
    capturable: false
    differentiable: false
    fused: null
  lr_scheduler:
    scheduler:
      _target_: openpmcvl.experiment.modules.scheduler.CosineAnnealingWarmupLR
      _partial_: true
      optimizer: ???
      T_max: 104671
      warmup_length: 2000
      eta_min: 0
      last_epoch: -1
      verbose: deprecated
    extras:
      interval: step
  loss:
    _target_: mmlearn.modules.losses.contrastive_loss.CLIPLoss
    l2_normalize: false
    local_loss: true
    gather_with_grad: true
    cache_labels: false
  modality_loss_pairs: null
  auxiliary_tasks: null
  log_auxiliary_tasks_loss: false
  compute_validation_loss: true
  compute_test_loss: true
  evaluation_tasks:
    retrieval:
      task:
        _target_: openpmcvl.experiment.modules.zero_shot_retrieval.ZeroShotCrossModalRetrieval_Eff
        task_specs:
        - query_modality: text
          target_modality: rgb
          top_k:
          - 1
          - 5
          - 10
      run_on_validation: false
      run_on_test: true
trainer:
  _target_: lightning.pytorch.trainer.trainer.Trainer
  accelerator: auto
  strategy: auto
  devices: auto
  num_nodes: 1
  precision: bf16-mixed
  logger:
    wandb:
      _target_: lightning.pytorch.loggers.wandb.WandbLogger
      name: vitb16_bert256_train_bs8_test
      save_dir: /fs01/home/yaspar/Documents/GitHub/pmc-data-extraction-dev/outputs/vitb16_bert256_train_bs8_test/2024-09-30/20-24-51
      version: null
      offline: true
      dir: /fs01/home/yaspar/Documents/GitHub/pmc-data-extraction-dev/outputs/vitb16_bert256_train_bs8_test/2024-09-30/20-24-51
      id: null
      anonymous: null
      project: multimodal
      log_model: false
      experiment: null
      prefix: ''
      checkpoint_name: null
      resume: allow
      tags:
      - vitb16_bert256_train_bs8_test
      - contrastive pretraining
      - rgb
      - text
      - clip
      - pmcvl
      - openpmcvl
      job_type: eval
  callbacks:
    lr_monitor:
      _target_: lightning.pytorch.callbacks.lr_monitor.LearningRateMonitor
      logging_interval: null
      log_momentum: false
      log_weight_decay: false
    model_checkpoint:
      _target_: lightning.pytorch.callbacks.model_checkpoint.ModelCheckpoint
      dirpath: /checkpoint/yaspar/13677621
      filename: null
      monitor: val/loss
      verbose: false
      save_last: true
      save_top_k: 1
      save_weights_only: false
      mode: min
      auto_insert_metric_name: true
      every_n_train_steps: null
      train_time_interval: null
      every_n_epochs: 1
      save_on_train_epoch_end: null
      enable_version_counter: true
    early_stopping:
      _target_: lightning.pytorch.callbacks.early_stopping.EarlyStopping
      monitor: val/loss
      min_delta: 0.0
      patience: 5
      verbose: false
      mode: min
      strict: true
      check_finite: true
      stopping_threshold: null
      divergence_threshold: null
      check_on_train_epoch_end: null
      log_rank_zero_only: false
    model_summary:
      _target_: lightning.pytorch.callbacks.model_summary.ModelSummary
      max_depth: 2
  fast_dev_run: false
  max_epochs: 32
  min_epochs: null
  max_steps: -1
  min_steps: null
  max_time: null
  limit_train_batches: null
  limit_val_batches: null
  limit_test_batches: null
  limit_predict_batches: null
  overfit_batches: 0.0
  val_check_interval: null
  check_val_every_n_epoch: 1
  num_sanity_val_steps: null
  log_every_n_steps: 1
  enable_checkpointing: true
  enable_progress_bar: true
  enable_model_summary: true
  accumulate_grad_batches: 4
  gradient_clip_val: null
  gradient_clip_algorithm: null
  deterministic: false
  benchmark: true
  inference_mode: true
  use_distributed_sampler: true
  profiler: null
  detect_anomaly: false
  barebones: false
  plugins: null
  sync_batchnorm: false
  reload_dataloaders_every_n_epochs: 0
  default_root_dir: /checkpoint/yaspar/13677621
tags:
- vitb16_bert256_train_bs8_test
- contrastive pretraining
- rgb
- text
- clip
- pmcvl
- openpmcvl
resume_from_checkpoint: null
strict_loading: true
torch_compile_kwargs:
  disable: true
  fullgraph: false
  dynamic: null
  backend: inductor
  mode: null
  options: null

[2024-09-30 20:24:52,580][mmlearn.cli][INFO] - Instantiating dataset: openpmcvl.experiment.datasets.pmcvl.PMCVL
[2024-09-30 20:24:52,845][mmlearn.cli][INFO] - Instantiating task module: mmlearn.tasks.contrastive_pretraining.ContrastivePretraining
[2024-09-30 20:25:11,569][mmlearn.cli][INFO] - Instantiating dataset: openpmcvl.experiment.datasets.pmcvl.PMCVL
[2024-09-30 20:25:11,777][mmlearn.cli][INFO] - Instantiating task module: mmlearn.tasks.contrastive_pretraining.ContrastivePretraining
Testing: |          | 0/? [00:00<?, ?it/s]Testing:   0%|          | 0/32 [00:00<?, ?it/s]Testing DataLoader 0:   0%|          | 0/32 [00:00<?, ?it/s]Testing DataLoader 0:   3%|▎         | 1/32 [00:01<00:51,  0.60it/s]Testing DataLoader 0:   6%|▋         | 2/32 [00:02<00:32,  0.92it/s]Testing DataLoader 0:   9%|▉         | 3/32 [00:02<00:26,  1.12it/s]Testing DataLoader 0:  12%|█▎        | 4/32 [00:03<00:22,  1.25it/s]Testing DataLoader 0:  16%|█▌        | 5/32 [00:03<00:20,  1.35it/s]Testing DataLoader 0:  19%|█▉        | 6/32 [00:04<00:18,  1.42it/s]Testing DataLoader 0:  22%|██▏       | 7/32 [00:04<00:16,  1.47it/s]Testing DataLoader 0:  25%|██▌       | 8/32 [00:05<00:15,  1.52it/s]Testing DataLoader 0:  28%|██▊       | 9/32 [00:05<00:14,  1.56it/s]Testing DataLoader 0:  31%|███▏      | 10/32 [00:06<00:13,  1.59it/s]Testing DataLoader 0:  34%|███▍      | 11/32 [00:06<00:12,  1.62it/s]Testing DataLoader 0:  38%|███▊      | 12/32 [00:07<00:12,  1.64it/s]Testing DataLoader 0:  41%|████      | 13/32 [00:07<00:11,  1.66it/s]Testing DataLoader 0:  44%|████▍     | 14/32 [00:08<00:10,  1.68it/s]Testing DataLoader 0:  47%|████▋     | 15/32 [00:08<00:10,  1.69it/s]Testing DataLoader 0:  50%|█████     | 16/32 [00:09<00:09,  1.70it/s]Testing DataLoader 0:  53%|█████▎    | 17/32 [00:09<00:08,  1.72it/s]Testing DataLoader 0:  56%|█████▋    | 18/32 [00:10<00:08,  1.73it/s]Testing DataLoader 0:  59%|█████▉    | 19/32 [00:10<00:07,  1.74it/s]Testing DataLoader 0:  62%|██████▎   | 20/32 [00:11<00:06,  1.74it/s]Testing DataLoader 0:  66%|██████▌   | 21/32 [00:11<00:06,  1.75it/s]Testing DataLoader 0:  69%|██████▉   | 22/32 [00:12<00:05,  1.76it/s]Testing DataLoader 0:  72%|███████▏  | 23/32 [00:13<00:05,  1.77it/s]Testing DataLoader 0:  75%|███████▌  | 24/32 [00:13<00:04,  1.77it/s]Testing DataLoader 0:  78%|███████▊  | 25/32 [00:14<00:03,  1.78it/s]Testing DataLoader 0:  81%|████████▏ | 26/32 [00:14<00:03,  1.78it/s]Testing DataLoader 0:  84%|████████▍ | 27/32 [00:15<00:02,  1.79it/s]Testing DataLoader 0:  88%|████████▊ | 28/32 [00:15<00:02,  1.79it/s]Testing DataLoader 0:  91%|█████████ | 29/32 [00:16<00:01,  1.80it/s]Testing DataLoader 0:  94%|█████████▍| 30/32 [00:16<00:01,  1.80it/s]Testing DataLoader 0:  97%|█████████▋| 31/32 [00:17<00:00,  1.80it/s]Testing DataLoader 0: 100%|██████████| 32/32 [00:17<00:00,  1.85it/s]len(x) must be 500: 500
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([4, 500])
scores.shape must be batch_size x 500: torch.Size([4, 500])
len(x) must be 500: 500
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([4, 500])
scores.shape must be batch_size x 500: torch.Size([4, 500])
len(x) must be 500: 500
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([4, 500])
scores.shape must be batch_size x 500: torch.Size([4, 500])
Testing DataLoader 0: 100%|██████████| 32/32 [00:17<00:00,  1.82it/s]
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃        Test metric        ┃       DataLoader 0        ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│         test/loss         │    0.2337169200181961     │
│   test/text_to_rgb_R@1    │    0.9679999947547913     │
│   test/text_to_rgb_R@10   │    0.9900000095367432     │
│   test/text_to_rgb_R@5    │    0.9900000095367432     │
└───────────────────────────┴───────────────────────────┘
len(x) must be 500: 500
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([4, 500])
scores.shape must be batch_size x 500: torch.Size([4, 500])
len(x) must be 500: 500
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([4, 500])
scores.shape must be batch_size x 500: torch.Size([4, 500])
len(x) must be 500: 500
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([16, 500])
scores.shape must be batch_size x 500: torch.Size([16, 500])
similarity.shape must be batch_size x 500: torch.Size([4, 500])
scores.shape must be batch_size x 500: torch.Size([4, 500])
[1;34mwandb[0m:
[1;34mwandb[0m: You can sync this run to the cloud by running:
[1;34mwandb[0m: [1mwandb sync /fs01/home/yaspar/Documents/GitHub/pmc-data-extraction-dev/outputs/vitb16_bert256_train_bs8_test/2024-09-30/20-24-51/wandb/offline-run-20240930_202452-2nwuwc02[0m
[1;34mwandb[0m: Find logs at: [1;35m../../../../../fs01/home/yaspar/Documents/GitHub/pmc-data-extraction-dev/outputs/vitb16_bert256_train_bs8_test/2024-09-30/20-24-51/wandb/offline-run-20240930_202452-2nwuwc02/logs[0m
